{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder (3)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder (3)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder (3)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder (3)\\\\src\\\\TodoList.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport uuid from \"uuid\";\nimport \"./TodoList.css\";\n\nfunction TodoList() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var create = function create(newTodo) {\n    console.log(newTodo);\n    setTodos([].concat(_toConsumableArray(todos), [newTodo]));\n  };\n\n  var remove = function remove(id) {\n    setTodos(todos.filter(function (todo) {\n      return todo.id !== id;\n    }));\n  };\n\n  var update = function update(id, updtedTask) {\n    var updatedTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          task: updtedTask\n        });\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  var toggleComplete = function toggleComplete(id) {\n    var updatedTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          completed: !todo.completed\n        });\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  var todosList = todos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(Todo, {\n      toggleComplete: toggleComplete,\n      update: update,\n      remove: remove,\n      key: todo.id,\n      todo: todo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TodoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, todosList), /*#__PURE__*/React.createElement(NewTodoForm, {\n    createTodo: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder (3)/src/TodoList.js"],"names":["React","useState","ReactDOM","Todo","NewTodoForm","uuid","TodoList","todos","setTodos","create","newTodo","console","log","remove","id","filter","todo","update","updtedTask","updatedTodos","map","task","toggleComplete","completed","todosList"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,IAAAA,QAAQ,8BAAKD,KAAL,IAAYG,OAAZ,GAAR;AACD,GAHD;;AAKA,MAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAQ;AACrBN,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,KAAb,CAAD,CAAR;AACD,GAFD;;AAIA,MAAMG,MAAM,GAAG,SAATA,MAAS,CAACH,EAAD,EAAKI,UAAL,EAAoB;AACjC,QAAMC,YAAY,GAAGZ,KAAK,CAACa,GAAN,CAAU,UAACJ,IAAD,EAAU;AACvC,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAClB,+CAAYE,IAAZ;AAAkBK,UAAAA,IAAI,EAAEH;AAAxB;AACD;;AACD,aAAOF,IAAP;AACD,KALoB,CAArB;AAMAR,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACD,GARD;;AAUA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACR,EAAD,EAAQ;AAC7B,QAAMK,YAAY,GAAGZ,KAAK,CAACa,GAAN,CAAU,UAACJ,IAAD,EAAU;AACvC,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAClB,+CAAYE,IAAZ;AAAkBO,UAAAA,SAAS,EAAE,CAACP,IAAI,CAACO;AAAnC;AACD;;AACD,aAAOP,IAAP;AACD,KALoB,CAArB;AAMAR,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACD,GARD;;AAUA,MAAMK,SAAS,GAAGjB,KAAK,CAACa,GAAN,CAAU,UAACJ,IAAD;AAAA,wBAC1B,oBAAC,IAAD;AACE,MAAA,cAAc,EAAEM,cADlB;AAEE,MAAA,MAAM,EAAEL,MAFV;AAGE,MAAA,MAAM,EAAEJ,MAHV;AAIE,MAAA,GAAG,EAAEG,IAAI,CAACF,EAJZ;AAKE,MAAA,IAAI,EAAEE,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD0B;AAAA,GAAV,CAAlB;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKQ,SAAL,CAFF,eAGE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEf,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport uuid from \"uuid\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const create = (newTodo) => {\r\n    console.log(newTodo);\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const remove = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const update = (id, updtedTask) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updtedTask };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const todosList = todos.map((todo) => (\r\n    <Todo\r\n      toggleComplete={toggleComplete}\r\n      update={update}\r\n      remove={remove}\r\n      key={todo.id}\r\n      todo={todo}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"TodoList\">\r\n      <h1>Todo List</h1>\r\n      <ul>{todosList}</ul>\r\n      <NewTodoForm createTodo={create} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}